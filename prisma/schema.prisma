// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    // NOTE: When using postgresql, mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Contact {
    id          String      @id @default(cuid())
    type        ContactType
    description String
    createdAt   DateTime    @default(now())
}

enum ContactType {
    ADDRESS
    EMAIL
    PHONE
}

model About {
    id          String   @id @default(cuid())
    description String
    createdAt   DateTime @default(now())
}

model Education {
    id             String       @id @default(cuid())
    organizationId String
    organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
    degree         String?
    thesis         String?
    awards         String?
    createdAt      DateTime     @default(now())
}

model Experience {
    id                     String                  @id @default(cuid())
    organizationId         String
    organization           Organization            @relation(fields: [organizationId], references: [id], onDelete: Cascade)
    experienceDescriptions ExperienceDescription[]
    createdAt              DateTime                @default(now())
}

model ExperienceDescription {
    id           String     @id @default(cuid())
    experience   Experience @relation(fields: [experienceId], references: [id], onDelete: Cascade)
    experienceId String
    description  String
    createdAt    DateTime   @default(now())
}

model Leadership {
    id                 String              @id @default(cuid())
    organization       Organization        @relation(fields: [organizationId], references: [id], onDelete: Cascade)
    organizationId     String
    leadershipProjects LeadershipProject[]
    createdAt          DateTime            @default(now())
}

model LeadershipProject {
    id             String     @id @default(cuid())
    leadership     Leadership @relation(fields: [leadershipId], references: [id], onDelete: Cascade)
    leadershipId   String
    course         String
    name           String?
    purpose        String?
    otherPositions String?
    createdAt      DateTime   @default(now())
}

model Organization {
    id            String       @id @default(cuid())
    position      String
    name          String
    location      String
    timeframeFrom DateTime
    timeframeTo   DateTime?
    educations    Education[]
    experiences   Experience[]
    leaderships   Leadership[]
    createdAt     DateTime     @default(now())
}

model Technical {
    id        String   @id @default(cuid())
    name      String
    createdAt DateTime @default(now())
}

model Language {
    id        String   @id @default(cuid())
    name      String
    createdAt DateTime @default(now())
}

model Interest {
    id        String   @id @default(cuid())
    name      String
    createdAt DateTime @default(now())
}
