import type { Dispatch, SetStateAction } from "react";
import Modal from "./Modal";

type Link = {
  name: string;
  href: string;
};

const links: Link[] = [
  {
    href: "https://nextjs.org/",
    name: "NextJS",
  },
  {
    href: "https://trpc.io/",
    name: "tRPC",
  },
  {
    href: "https://tailwindcss.com/",
    name: "TailwindCSS",
  },
  {
    href: "https://typescriptlang.org/",
    name: "TypeScript",
  },
  {
    href: "https://prisma.io/",
    name: "Prisma",
  },
  {
    href: "https://next-auth.js.org/",
    name: "NextAuth.js",
  },
];

const ProjectInformation = ({
  state,
}: {
  state: [boolean, Dispatch<SetStateAction<boolean>>];
}) => {
  return (
    <Modal state={state} title="Project Information">
      <div className="space-y-2 opacity-75">
        <p>
          This project is bootstrapped and generated by{" "}
          <span className="whitespace-nowrap">t3-oss&apos;</span>{" "}
          <Link
            href="https://github.com/t3-oss/create-t3-app"
            name="create-t3-app"
          />{" "}
          which consists of the following technologies:
        </p>
        <ul className="ml-2 list-outside list-disc">
          {links.map(({ href, name }, index) => (
            <li key={index}>
              <a
                href={href}
                target="_blank"
                rel="noreferrer"
                className="text-blue-500 dark:text-blue-300"
              >
                {name}
              </a>
            </li>
          ))}
        </ul>
        <p>
          All existing, and incoming dynamic data is handled by Prisma, with{" "}
          <Link href="https://www.postgresql.org/" name="PostgreSQL" /> as
          provider, server-hosted with{" "}
          <Link href="https://railway.app/" name="Railway." />, and fetched
          through tRPC and Tanstack Query.
        </p>
      </div>
    </Modal>
  );
};

export default ProjectInformation;

const Link = ({ href, name }: Link) => (
  <a
    href={href}
    target="_blank"
    rel="noreferrer"
    className="text-blue-500 underline underline-offset-2 dark:text-blue-300"
  >
    {name}
  </a>
);
